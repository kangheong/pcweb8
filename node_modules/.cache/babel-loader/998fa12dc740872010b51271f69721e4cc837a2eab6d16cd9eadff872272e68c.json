{"ast":null,"code":"var _jsxFileName = \"/Users/kangheong/Desktop/pcweb8/src/views/PostPageUpdate.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Container, Form, Nav, Navbar } from \"react-bootstrap\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { ADD, API, POST } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PostPageUpdate() {\n  _s();\n  const params = useParams();\n  const id = params.id;\n  const [caption, setCaption] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const navigate = useNavigate();\n  async function getPost(id) {\n    const url = API + POST + \"/\" + id;\n    const response = await axios.get(url);\n    const {\n      caption,\n      image\n    } = response.data;\n    setCaption(caption);\n    setImage(image);\n  }\n  useEffect(() => {\n    getPost(id);\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      variant: \"light\",\n      bg: \"light\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"/\",\n          children: \"Tinkergram\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"/add\",\n            children: \"New Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginBlock: \"1rem\"\n        },\n        children: \"Update Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb=3\",\n          controlId: \"caption\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Caption\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Lovely Day\",\n            value: caption,\n            onChange: text => setCaption(text.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"https://zca.sf/img/1\",\n            value: image,\n            onChange: text => setImage(text.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"Make sure the URL has an image type at the end: jpg, jpeg, png.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: async e => {\n            const post = {\n              image,\n              caption\n            };\n            try {\n              await axios.put(API + POST + \"/\" + id, post);\n              navigate(\"/\");\n            } catch (error) {\n              console.error(error.message);\n            }\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(PostPageUpdate, \"qfBOfWd8b9v2XcjRaJmthXLcJ2M=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PostPageUpdate;\nvar _c;\n$RefreshReg$(_c, \"PostPageUpdate\");","map":{"version":3,"names":["axios","React","useEffect","useState","Button","Container","Form","Nav","Navbar","useNavigate","useParams","ADD","API","POST","jsxDEV","_jsxDEV","Fragment","_Fragment","PostPageUpdate","_s","params","id","caption","setCaption","image","setImage","navigate","getPost","url","response","get","data","children","variant","bg","Brand","href","fileName","_jsxFileName","lineNumber","columnNumber","Link","style","marginBlock","Group","className","controlId","Label","Control","type","placeholder","value","onChange","text","target","Text","onClick","e","post","put","error","console","message","_c","$RefreshReg$"],"sources":["/Users/kangheong/Desktop/pcweb8/src/views/PostPageUpdate.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Container, Form, Nav, Navbar } from \"react-bootstrap\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { ADD, API, POST } from \"../constants\";\n\nexport default function PostPageUpdate() {\n  const params = useParams();\n  const id = params.id;\n  const [caption, setCaption] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const navigate = useNavigate();\n\n  async function getPost(id) {\n    const url = API + POST + \"/\" + id;\n    const response = await axios.get(url);\n    const { caption, image } = response.data;\n    setCaption(caption);\n    setImage(image);\n  }\n\n  useEffect(() => {\n    getPost(id);\n  }, [id]);\n\n  return (\n    <>\n      <Navbar variant=\"light\" bg=\"light\">\n        <Container>\n          <Navbar.Brand href=\"/\">Tinkergram</Navbar.Brand>\n          <Nav>\n            <Nav.Link href=\"/add\">New Post</Nav.Link>\n          </Nav>\n        </Container>\n      </Navbar>\n      <Container>\n        <h1 style={{ marginBlock: \"1rem\" }}>Update Post</h1>\n        <Form>\n          <Form.Group className=\"mb=3\" controlId=\"caption\">\n            <Form.Label>Caption</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Lovely Day\"\n              value={caption}\n              onChange={(text) => setCaption(text.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"image\">\n            <Form.Label>Image URL</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"https://zca.sf/img/1\"\n              value={image}\n              onChange={(text) => setImage(text.target.value)}\n            />\n            <Form.Text className=\"text-muted\">\n              Make sure the URL has an image type at the end: jpg, jpeg, png.\n            </Form.Text>\n          </Form.Group>\n          <Button\n            variant=\"primary\"\n            onClick={async (e) => {\n              const post = { image, caption };\n              try {\n                await axios.put(API + POST + \"/\" + id, post);\n                navigate(\"/\");\n              } catch (error) {\n                console.error(error.message);\n              }\n            }}\n          >Submit</Button>\n        </Form>\n      </Container>\n    </>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}